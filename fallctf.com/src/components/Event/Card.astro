---
import { Picture } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
  input: CollectionEntry<'events'>;
  size?: 'small' | 'large';
};

const { input, size } = Astro.props;
const event = input.data as CollectionEntry<'events'>['data'];
const { title, card_image } = event;

const colRowSpan = (size: Props['size']) => {
  switch (size) {
    case 'small':
      return 'col-span-1 row-span-1';
    case 'large':
      return 'col-span-2 row-span-2';
    default:
      return 'col-span-1 row-span-1';
  }
};

// heading, title, image, overlay_image, card_image, link
---
<div class={`${colRowSpan(size)} flex mx-2 hover:brightness-50 cursor-pointer`}>
  <div class="aspect-video grid">
      {card_image?.background && (
        <div class="p-4">
        <Picture
            src={card_image?.background}
            class="overflow-hidden h-full object-cover rounded-lg border-slate-100 border-2"
            widths={[300, 600, 900]}
            formats={['avif', 'webp']}
            alt={title ?? "Event card image"}
          />
        </div>
        )}
        {
          card_image?.background_color && (
            <div><div style={{ backgroundColor: card_image?.background_color }} /></div>
          )
        }
    {card_image?.foreground && 
      <div class="m-4 rounded-lg bg-slate-500 flex items-center justify-center border-slate-100 border-2">
      <Picture
        src={card_image?.foreground}
        class="overflow-hidden px-4"
        widths={[300, 600, 900]}
        formats={['avif', 'webp']}
        alt={title ?? "Event card image"}
      />
      </div>
    }
  </div>
</div>